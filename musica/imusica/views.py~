from django.shortcuts import HttpResponse, render_to_response
from models import Artist								#from your_app.models import Course
from django.http import HttpResponseRedirect, HttpResponse
from django.template import Context, loader
from django.views.generic.base import TemplateResponseMixin
from django.views.generic import ListView

def mainpage(request):
    return HttpResponse("Hola!    Com va la cosa ...")

class Resposta(TemplateResponseMixin):

    def crear_xml(self, objects, **kwargs):
        xml_data = serializers.serialize(u"xml", objects, **kwargs)
        return HttpResponse(xml_data, content_type=u"application/xml")
        
    def render_resposta(self, context, **kwargs):
        if 'extension' in self.kwargs:
            try:
                objects=[self.object]
            except AttributeError:
                objects= self.object_list
            if self.kwargs['extension']=='xml':
                return self.crear_xml(objects=objects)
        else:
            return super(Resposta, self).render_resposta(context)
            
class Inici(ListView):
    model = Artist
    template_name = 'index.html'
    queryset = Artist.objects.all()

class Artists(ListView):
    model = Artist
    template_name = 'artists.html'
    queryset = Artist.objects.all()
    context_object_name = 'artist_list'

#def ArtistListView(ListView):								#CoursesListView(ListView):
#    return HttpResponse(['a','b'])
    
#    return HttpResponse(Context(['a','b']),mimetype='text/plain')
#	template_name = "your_template.html"				#    template_name = "your_template.html"
#    template = loader.get_template("your_template.html")
#	return HttpResponse(template.render())
#	return render_to_response('app/your_template.html')

#	if request.method == 'POST': # If the form has been submitted...
#    	form = ContactForm(request.POST) # A form bound to the POST data
#    	chosen = []
#    	if form.is_valid():
#    	    strt = time.time()
#    	    form = form.cleaned_data
#    	    parameters = organize(form)
#    	    print 'input organized'
#    	    chosen, companies = multiple(parameters)
#    	    end = time.time()
#    	    pp.pprint(companies)
#    	    print 'companies matching search filters: ' , len(companies)
#	
#    	    print 'total time: ' , str(end-strt)
#
#    response = HttpResponse(chosen)
#    return HttpResponseRedirect('results') # Redirect after POST

def index(request):
    template = loader.get_template("app/index.html")
    return HttpResponse(template.render())
	
def get_queryset(self):								#    def get_queryset(self):
#		return Artist.objects.filter(					#        return Course.objects.filter(
#			idNumber=self.kwargs.get('idNumber')		#            student__id=self.kwargs.get('student_id')
#        )
	return HttpResponse(variables1, mimetype="application/json")
